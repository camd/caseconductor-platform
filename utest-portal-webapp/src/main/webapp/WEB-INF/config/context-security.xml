<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:flex="http://www.springframework.org/schema/flex"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            			http://www.springframework.org/schema/flex http://www.springframework.org/schema/flex/spring-flex-1.0.xsd">
	
	<!-- Custom exception translator configured as a Spring bean 
	<bean id="exceptionTranslator" class="com.utest.service.exception.ExceptionTranslatorImpl" />
	-->
	
	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		  <sec:filter-chain-map path-type="ant">
		  	<sec:filter-chain 
			    pattern = "/**/*" 
			    filters = "concurrentSessionFilter,
				    	   anonymousProcessingFilter
			               "/>	    
		 </sec:filter-chain-map>
	  </bean>	  		
	  
	  <!-- CONCURRENT SESSION FILTER -->
	  <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
	  
	  <bean id="concurrentSessionFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
	    <property name="sessionRegistry" ref="sessionRegistry"/>
	  </bean>
			
	 	  
	  <!-- ANONYMOUS PROCESSING FILTER -->
		<bean id="anonymousProcessingFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		  <property name="key" value="anonymous"/>
		  <property name="userAttribute" value="anonymousUser,PERMISSION_ANONYMOUS"/>
		</bean>
		
	   <!-- AUTHENTICATION PROVIDERS -->
	    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
	      <property name="providers">
	        <list> 
	         <ref local="anonymousAuthenticationProvider" />
	         <ref local="customAuthenticationProvider" /> 
	        </list> 
	      </property>
	      <property name="authenticationEventPublisher" ref="defaultAuthenticationEventPublisher"/>
	    </bean>   
	   <bean id="defaultAuthenticationEventPublisher" class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher" /> 
	    
	    <!-- ANONYMOUS AUTHENTICATION PROVIDER -->
      <bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <property name="key" value="anonymous"/>
      </bean>
	    
 	   <!-- AUTHORIZATION -->   
		<bean id="filterInvocationInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		  <property name="authenticationManager" ref="authenticationManager"/>
		  <property name="accessDecisionManager" ref="accessDecisionManager"/>  
		  <property name="objectDefinitionSource">
		    <sec:filter-invocation-definition-source>
		      <sec:intercept-url pattern='/**'/>
		    </sec:filter-invocation-definition-source>
		  </property>
		</bean>
        		   
	<!-- Our authentication provider -->
	<bean id="customAuthenticationProvider" class="com.utest.service.security.AuthenticationProviderImpl">
		<constructor-arg ref="userService" />
    </bean>
    

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
				<ref bean="authenticatedVoter" />
			</list>
		</property>
	</bean>

	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<property name="rolePrefix" value="PERMISSION_" />
	</bean>

	<bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter"/>

	<bean id="authenticationSuccessListener" class="com.utest.service.security.AuthenticationSuccessListener">
		<constructor-arg ref="userService" />
    </bean>
    
	<bean id="httpSessionDestroyedListener" class="com.utest.service.security.HttpSessionDestroyedListener">
		<constructor-arg ref="userService" />
    </bean>
    
	<sec:global-method-security secured-annotations="enabled" access-decision-manager-ref="accessDecisionManager" >	
		<!-- OVERRIDE ANNOTATIONS -->
		<!--
		<sec:protect-pointcut expression="execution(* com.utest.service.*.api.UserManagementService.saveUser(..))"
			access="1" />
		-->
	</sec:global-method-security>
</beans>